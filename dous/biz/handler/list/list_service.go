// Code generated by hertz generator.

package list

import (
	"context"
	feed "dous/biz/model/hertz/feed"
	list "dous/biz/model/hertz/list"
	user "dous/biz/model/hertz/user"
	"dous/biz/model/query"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// ListResponse .
// @router /douyin/public/list/ [GET]
func ListResponse(ctx context.Context, c *app.RequestContext) {
	var err error
	var req list.DouyinPublishListRequest
	err = c.BindAndValidate(&req)
	print("1111111")
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	u := query.Video
	//根据用户id去查询已经发布的视频
	vediolist, err := u.WithContext(ctx).Where(u.AuthorID.Eq(req.UserId)).Find()
	print("2222222")
	if err != nil {
		panic(err)
	}
	//列表长度
	len2 := len(vediolist)
	print("len2:")
	print(len2)

	//查询作品作者信息
	s := query.User
	uu := query.Like
	uu2 := query.Comment

	print("33333333")
	res, _ := s.WithContext(ctx).Where(s.ID.Eq(req.UserId)).First()

	userinfo := user.User{
		Id:              res.ID,
		Name:            res.Username,
		FollowerCount:   1,
		FollowCount:     1,
		IsFollow:        false,
		Avatar:          "",
		BackgroundImage: "",
		Signature:       "",
		TotalFavorited:  0,
		WorkCount:       int64(len2),
		FavoriteCount:   0,
	}

	//resVideo := make([]feed.Video, len+1)
	var resVideo [100]*feed.Video
	//用切片存储视频列表

	for i := 0; i < len2; i++ {
		var tmp feed.Video
		tmp.Id = vediolist[i].ID
		tmp.PlayUrl = vediolist[i].PlayURL
		tmp.CoverUrl = vediolist[i].CoverURL
		// 查询该视频的点赞数量和评论数量

		likeNum, _ := uu.WithContext(ctx).Where(uu.VideoID.Eq(tmp.Id)).Count()
		commentNum, _ := uu2.WithContext(ctx).Where(uu2.VideoID.Eq(tmp.Id)).Count()
		isLike, _ := uu.WithContext(ctx).Where(uu.UserID.Eq(req.UserId), uu.VideoID.Eq(tmp.Id)).Count()
		var fg bool
		if isLike == 0 {
			fg = false
		} else {
			fg = true
		}
		tmp.FavoriteCount = likeNum
		tmp.CommentCount = commentNum
		tmp.IsFavorite = fg
		tmp.Title = vediolist[i].Title
		tmp.Author = &userinfo
		resVideo[i] = &tmp
	}

	var videos []*feed.Video
	for _, v := range resVideo {
		if v == nil {
			break
		}
		videos = append(videos, v)
		//print("i:")
		//print(i)
		//println(v.PlayUrl)
	}

	resp := new(list.DouyinPublishListResponse)
	resp.VideoList = videos

	resp.StatusMsg = "success"
	resp.StatusCode = 0 //0表示成功

	c.JSON(consts.StatusOK, resp)
}
